import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Header } from "@/components/header";
import { ThemeProvider } from "@/components/theme-providers";
import { UserProvider } from '@auth0/nextjs-auth0/client';


export const viewport = {
  themeColor: [
    { media: '(prefers-color-scheme: light)', color: 'white' },
    { media: '(prefers-color-scheme: dark)', color: 'black' }
  ]
}

function ThemeScript() {
  return (
    <script
      dangerouslySetInnerHTML={{
        __html: `
          (function() {
            const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
            const storedTheme = localStorage.getItem('theme');
            const theme = storedTheme || (prefersDark ? 'dark' : 'light');
            document.documentElement.classList.add(theme);
          })();
        `,
      }}
    />
  );
}

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Stice AI",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <UserProvider>
        <head>
        <ThemeScript />
        </head>
        <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
          <Header />
          <ThemeProvider attribute="class" defaultTheme="system" disableTransitionOnChange>
            <div suppressHydrationWarning>
              {typeof window === "undefined" ? null : children}
            </div>
              <main className="flex flex-col flex-1">
                {children}
              </main>
          </ThemeProvider>
        </body>
      </UserProvider>
    </html>
  );
}
